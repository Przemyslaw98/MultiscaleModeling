// generated by Fast Light User Interface Designer (fluid) version 1.0305

#ifndef main_h
#define main_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
extern Fl_Double_Window *window_main;
#include <FL/Fl_Value_Input.H>
extern Fl_Value_Input *input_scale;
extern Fl_Value_Input *input_cellsX;
extern Fl_Value_Input *input_cellsY;
#include <FL/Fl_Round_Button.H>
extern Fl_Round_Button *btn_hand;
extern Fl_Round_Button *btn_regular;
extern Fl_Round_Button *btn_random;
extern Fl_Round_Button *btn_periodic;
extern Fl_Round_Button *btn_absorbing;
extern Fl_Round_Button *btn_neumann;
extern Fl_Round_Button *btn_moore;
extern Fl_Round_Button *btn_pentagonal;
extern Fl_Round_Button *btn_hexagonal;
extern Fl_Round_Button *btn_radial;
extern Fl_Round_Button *btn_left;
extern Fl_Round_Button *btn_right;
extern Fl_Round_Button *btn_random;
#include <FL/Fl_Button.H>
extern Fl_Button *btn_start;
extern Fl_Value_Input *input_nucleiX;
extern Fl_Value_Input *input_nucleiY;
#include <FL/Fl_Box.H>
extern Fl_Value_Input *input_nucleiR;
extern Fl_Value_Input *input_radius;
extern Fl_Value_Input *input_radiusN;
int main();
void callback_hand();
void callback_regular();
void callback_random();
void callback_absorbing();
void callback_periodic();
void callback_neumann();
void callback_moore();
void callback_pentagonal();
void callback_hexagonal();
void callback_radial();
void callback_left();
void callback_right();
void callback_randomN();
extern Fl_Double_Window *window_result;
#include "Imagebox.h"
extern Imagebox *result;
extern Fl_Double_Window *window_choose;
extern Fl_Button *btn_done;
int callback_start();
void callback_done();
void callback_close();
void callback_grow(void*);
extern int border_condition;
extern int nuclei;
extern int neighborhood;
extern int hex_type;
#endif
