// generated by Fast Light User Interface Designer (fluid) version 1.0305

#include "main.h"
#include <time.h>
#include <stdlib.h>
#include <cmath>

Fl_Double_Window *window_main=(Fl_Double_Window *)0;

Fl_Value_Input *input_width=(Fl_Value_Input *)0;

Fl_Value_Input *input_height=(Fl_Value_Input *)0;

Imagebox *result=(Imagebox *)0;

Fl_Choice *menu_initial=(Fl_Choice *)0;

imageStack* stack=new imageStack();

Fl_Menu_Item menu_menu_initial[] = {
 {"Empty", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Constant", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Glider", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Oscillator", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Random", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Button *btn_prv=(Fl_Button *)0;

static void cb_btn_prv(Fl_Button*, void*) {
  callback_prev();
}

Fl_Button *btn_nxt=(Fl_Button *)0;

static void cb_btn_nxt(Fl_Button*, void*) {
  callback_next();
}

Fl_Button *btn_set=(Fl_Button *)0;

static void cb_btn_set(Fl_Button*, void*) {
  callback_draw();
}

int main() {
  { window_main = new Fl_Double_Window(640, 375, "Conway's Game of Life");
    { input_width = new Fl_Value_Input(40, 16, 32, 32, "Size:");
      input_width->minimum(8);
      input_width->maximum(100);
      input_width->value(40);
    } // Fl_Value_Input* input_width
    { input_height = new Fl_Value_Input(85, 16, 32, 32, "x");
      input_height->minimum(8);
      input_height->maximum(100);
      input_height->value(20);
    } // Fl_Value_Input* input_height
    { result = new Imagebox(0, 55, 640, 320);
      result->box(FL_FLAT_BOX);
      result->color(FL_BACKGROUND2_COLOR);
      result->selection_color(FL_BACKGROUND_COLOR);
      result->labeltype(FL_NORMAL_LABEL);
      result->labelfont(0);
      result->labelsize(14);
      result->labelcolor(FL_FOREGROUND_COLOR);
      result->align(Fl_Align(FL_ALIGN_CENTER));
      result->when(FL_WHEN_RELEASE);
    } // Imagebox* result
    { menu_initial = new Fl_Choice(130, 25, 140, 25, "Initial state");
      menu_initial->down_box(FL_BORDER_BOX);
      menu_initial->align(Fl_Align(FL_ALIGN_TOP));
      menu_initial->menu(menu_menu_initial);
    } // Fl_Choice* menu_initial
    { btn_prv = new Fl_Button(558, 16, 35, 35, "<<");
      btn_prv->shortcut(0x4ff51);
      btn_prv->callback((Fl_Callback*)cb_btn_prv);
      btn_prv->deactivate();
    } // Fl_Button* btn_prv
    { btn_nxt = new Fl_Button(598, 16, 35, 35, ">>");
      btn_nxt->shortcut(0x4ff53);
      btn_nxt->callback((Fl_Callback*)cb_btn_nxt);
      btn_nxt->deactivate();
    } // Fl_Button* btn_nxt
    { btn_set = new Fl_Button(277, 16, 48, 35, "Set");
      btn_set->callback((Fl_Callback*)cb_btn_set);
    } // Fl_Button* btn_set
    window_main->size_range(640, 375, 640, 375);
    window_main->end();
  } // Fl_Double_Window* window_main
  window_main->show();
    return Fl::run();
}

void callback_next() {
  int width=result->w()/16;
  int height=result->h()/16;
  int** previous_iteration=stack->peek();
  int** this_iteration=new int*[width];
  for(int i=0;i<width;i++)
    this_iteration[i]=new int[height];
  for(int i=0;i<width;i++)
    for(int j=0;j<height;j++){
      int neighbors=0;
      for(int k=-1;k<2;k++)
        for(int l=-1;l<2;l++){
          if(k==0&&l==0)
            continue;
          if(previous_iteration[(i+k+width)%width][(j+l+height)%height]==1)
            neighbors++;
        }
      switch(neighbors){
        case 3:
          this_iteration[i][j]=1;
          break;
        case 2:
          this_iteration[i][j]=previous_iteration[i][j];
          break;
        default:
          this_iteration[i][j]=0;
      }
    }
  result->draw_image(width,height,this_iteration);
  btn_prv->activate();
  stack->push(this_iteration);
  window_main->redraw();
}

void callback_prev() {
  stack->pop();
  int width=result->w()/16;
  int height=result->h()/16;
  result->draw_image(width,height,stack->peek());
  if (stack->isOne())
    btn_prv->deactivate();
  window_main->redraw();
}

void callback_draw() {
  int x,y,win_x,win_y;
  if(input_width->value()>=8)
    x=input_width->value();
  else x=8;
  if(input_height->value()>=8)
    y=input_height->value();
  else y=8;
  if(input_width->value()>=40)
    win_x=input_width->value()*16;
  else win_x=640;
  if(input_height->value()>=20)
    win_y=input_height->value()*16;
  else win_y=320;
  result->resize(0,55,x*16,y*16);
  window_main->resize(window_main->x_root(),window_main->y_root(),win_x,win_y+55);
  int** image_array=result->make_image_array(x,y,menu_initial->value());
  result->draw_image(x,y,image_array);
  btn_nxt->activate();
  btn_prv->deactivate();
  stack->clear();
  stack->push(image_array);
  window_main->redraw();
}


